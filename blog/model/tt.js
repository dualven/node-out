Executing (default): SELECT `online`.`gw_id`, `online`.`name` AS `gw_name`, `online`.`street_address` AS `street`, `online`.`last_heartbeat_at` AS `onlinetime`, `online`.`customer_id`, `customer`.`id` AS `customer.customer_id`
, `customer`.`name` AS `customer.customer_name`, `customer`.`id` AS `customer.id` FROM `think_hotspot` AS `online` LEFT OUTER JOIN `think_customer` AS `customer` ON `online`.`customer_id` = `customer`.`id`;
{ count: 1,
  rows:
   [ online {
       dataValues: [Object],
       _previousDataValues: [Object],
       _changed: {},
       _modelOptions: [Object],
       _options: [Object],
       __eagerlyLoadedAssociations: [],
       isNewRecord: false,
       customer: [Object] } ] }
dualven
online {
  dataValues:
   { gw_id: 'dualven',
     gw_name: 'dualven',
     street: '22222333',
     onlinetime: 0,
     customer_id: 2043,
     customer:
      customer {
        dataValues: [Object],
        _previousDataValues: [Object],
        _changed: {},
        _modelOptions: [Object],
        _options: [Object],
        __eagerlyLoadedAssociations: [],
        isNewRecord: false } },
  _previousDataValues:
   { gw_id: 'dualven',
     gw_name: 'dualven',
     street: '22222333',
     onlinetime: 0,
     customer_id: 2043,
     customer:
      customer {
        dataValues: [Object],
        _previousDataValues: [Object],
        _changed: {},
        _modelOptions: [Object],
        _options: [Object],
        __eagerlyLoadedAssociations: [],
        isNewRecord: false } },
  _changed: {},
  _modelOptions:
   { timestamps: false,
     validate: {},
     freezeTableName: true,
     underscored: false,
     underscoredAll: false,
     paranoid: true,
     rejectOnEmpty: false,
     whereCollection: null,
     schema: null,
     schemaDelimiter: '',
     defaultScope: {},
     scopes: [],
     hooks: {},
     indexes: [],
     name: { plural: 'onlines', singular: 'online' },
     omitNull: false,
     tableName: 'think_hotspot',
     createdAt: false,
     updatedAt: false,
     deletedAt: false,
     sequelize:
      Sequelize {
        options: [Object],
        config: [Object],
        dialect: [Object],
        queryInterface: [Object],
        models: [Object],
        modelManager: [Object],
        connectionManager: [Object],
        importCache: [Object],
        test: [Object] },
     uniqueKeys:
      { think_hotspot_gw_id_unique: [Object],
        think_hotspot_customer_id_unique: [Object] } },
  _options:
   { isNewRecord: false,
     _schema: null,
     _schemaDelimiter: '',
     include: [ [Object] ],
     includeNames: [ 'customer' ],
     includeMap: { customer: [Object] },
     includeValidated: true,
     attributes: [ 'gw_id', 'gw_name', 'street', 'onlinetime', 'customer_id' ],
     raw: true },
  __eagerlyLoadedAssociations: [],
  isNewRecord: false,
  customer:
   customer {
     dataValues: { customer_id: 2043, customer_name: 'dxws', id: 2043 },
     _previousDataValues: { customer_id: 2043, customer_name: 'dxws', id: 2043 },
     _changed: {},
     _modelOptions:
      { timestamps: false,
        validate: {},
        freezeTableName: true,
        underscored: false,
        underscoredAll: false,
        paranoid: true,
        rejectOnEmpty: false,
        whereCollection: null,
        schema: null,
        schemaDelimiter: '',
        defaultScope: {},
        scopes: [],
        hooks: {},
        indexes: [],
        name: [Object],
        omitNull: false,
        tableName: 'think_customer',
        createdAt: false,
        updatedAt: false,
        deletedAt: false,
        sequelize: [Object],
        uniqueKeys: {} },
     _options:
      { isNewRecord: false,
        _schema: null,
        _schemaDelimiter: '',
        include: undefined,
        includeNames: undefined,
        includeMap: undefined,
        includeValidated: true,
        raw: true,
        attributes: undefined },
     __eagerlyLoadedAssociations: [],
     isNewRecord: false },
  customer_name: 'dxws' }
{ gw_id: 'dualven',
  gw_name: 'dualven',
  street: '22222333',
  onlinetime: 0,
  customer_id: 2043,
  customer: { customer_id: 2043, customer_name: 'dxws', id: 2043 } }
